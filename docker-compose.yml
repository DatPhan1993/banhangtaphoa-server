version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: pos-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-pos_system}
      MYSQL_USER: ${DB_USER:-pos_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-userpassword}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/src/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "3306:3306"
    networks:
      - pos-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # POS Application
  app:
    build: .
    container_name: pos-app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: ${DB_USER:-pos_user}
      DB_PASSWORD: ${DB_PASSWORD:-userpassword}
      DB_NAME: ${DB_NAME:-pos_system}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "3001:3001"
    networks:
      - pos-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      timeout: 5s
      retries: 5
      start_period: 30s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pos-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    networks:
      - pos-network

volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  pos-network:
    driver: bridge 